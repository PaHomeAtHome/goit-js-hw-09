{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,kBACjCC,EAASF,SAASC,cAAc,iBAChCE,EAAWH,SAASC,cAAc,mBAkBxC,SAASG,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAOtC,OANIF,EACFV,EAAAa,OAAOC,QAAQ,sBAAsBN,QAAeC,OAEpDT,EAAAa,OAAOE,QAAQ,oBAAoBP,QAAeC,OAG7C,IAAIO,SAAQ,CAACC,EAASC,KACvBR,GACFO,EAAQ,CAAEE,SAAAX,EAAUY,MAAAX,IAEtBS,EAAO,CAAEC,SAAAX,EAAUY,MAAAX,OAClBY,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACnBE,QAAQC,IAAI,uBAAqBJ,QAAiBC,UAEnDI,OAAM,EAACL,SAAEA,EAAQC,MAAEA,MAClBE,QAAQC,IAAI,sBAAoBJ,QAAeC,UAlCpCjB,SAASC,cAAc,SAE/BqB,iBAAiB,UAExB,SAAkBC,GAChBA,EAAMC,iBACN,MAAMP,EAAQQ,SAAS1B,EAAQ2B,MAAO,IAChCC,EAAOF,SAASvB,EAAOwB,MAAO,IAC9BE,EAASH,SAAStB,EAASuB,MAAO,IAExC,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAC/B,GAAU,IAANA,EAAS,CAAEC,WAAW1B,EAAea,EAAOY,EAAI,EAAGZ,GAAQ,SAC/D,MAAMc,EAAOF,EAAIF,EAAOV,EACxBa,WAAW1B,EAAe2B,EAAMF,EAAI,EAAGE","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delayEl = document.querySelector(`[name=\"delay\"]`);\nconst stepEl = document.querySelector(`[name=\"step\"]`);\nconst amountEl = document.querySelector(`[name=\"amount\"]`);\nconst formEl = document.querySelector(`.form`);\n\nformEl.addEventListener(`submit`, onSubmit)\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const delay = parseInt(delayEl.value, 10);\n  const step = parseInt(stepEl.value, 10);\n  const amount = parseInt(amountEl.value, 10);\n\n  for (let i = 0; i < amount; i++) {\n    if (i === 0) { setTimeout(createPromise, delay, i + 1, delay); continue}\n    const time = i * step + delay;\n    setTimeout(createPromise, time, i + 1, time)\n  }\n}\n  \nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    Notify.success(`Fullfilled promise ${position} in ${delay}ms`);\n  } else {\n    Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n  }\n\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delay })\n    }\n    reject({ position, delay })\n  }).then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n}\n\n\n  \n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$delayEl","document","querySelector","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","Notify","success","failure","Promise","resolve","reject","position","delay","then","console","log","catch","addEventListener","event","preventDefault","parseInt","value","step","amount","i","setTimeout","time"],"version":3,"file":"03-promises.055d515f.js.map"}
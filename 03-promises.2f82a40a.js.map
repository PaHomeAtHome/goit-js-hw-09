{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,kBACjCC,EAASF,SAASC,cAAc,iBAChCE,EAAWH,SAASC,cAAc,mBACzBD,SAASC,cAAc,SAE/BG,iBAAiB,UAKxB,SAAkBC,GAChBA,EAAMC,iBACN,MAAMC,EAAQC,SAAST,EAAQU,MAAO,IAChCC,EAAOF,SAASN,EAAOO,MAAO,IAC9BE,EAASH,SAASL,EAASM,MAAO,KAK1C,SAAqBF,EAAOG,EAAMC,GACdC,WAAWC,EAAcN,EAAOI,EAAQJ,EAAOG,GAJjEI,CAAYP,EAAOG,EAAMC,MAT3B,IAAII,EAAW,EACXC,EAAa,KAejB,SAASH,EAAaF,EAAQJ,EAAOG,GACnCO,EAAYN,EAAQJ,EAAOG,GAC3BM,EAAaE,YAAYD,EAAaP,EAAMC,EAAQJ,EAAOG,GAG7D,SAASO,EAAYN,EAAQJ,EAAOG,GAClC,MAAMS,EAAOZ,EAAQG,EAAOK,EAE5B,GADEA,GAAY,EACVA,EAAWJ,EAGb,OAFAS,cAAcJ,QACdD,EAAW,IAOf,SAAuBM,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAClCF,EACF1B,EAAA6B,OAAOC,QAAQ,sBAAsBN,QAAeC,OAEpDzB,EAAA6B,OAAOE,QAAQ,oBAAoBP,QAAeC,OAG7C,IAAIO,SAAQ,CAACC,EAASC,KACvBR,GACFO,EAAQ,CAAEE,SAAAX,EAAUd,MAAAe,IAEtBS,EAAO,CAAEC,SAAAX,EAAUd,MAAAe,OAClBW,MAAK,EAAGD,SAAAE,EAAQ3B,MAAEA,MACnB4B,QAAQC,IAAI,uBAAqBF,QAAiB3B,UAEnD8B,OAAM,EAAGL,SAAAM,EAAQ/B,MAAEA,MAClB4B,QAAQC,IAAI,sBAAoBE,QAAe/B,UApBjDgC,CAAcxB,EAAUI","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delayEl = document.querySelector(`[name=\"delay\"]`);\nconst stepEl = document.querySelector(`[name=\"step\"]`);\nconst amountEl = document.querySelector(`[name=\"amount\"]`);\nconst formEl = document.querySelector(`.form`);\n\nformEl.addEventListener(`submit`, onSubmit)\n\nlet position = 0;\nlet intervalId = null;\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const delay = parseInt(delayEl.value, 10);\n  const step = parseInt(stepEl.value, 10);\n  const amount = parseInt(amountEl.value, 10);\n\n  makeTimeout(delay, step, amount)\n}\n\nfunction makeTimeout(delay, step, amount) {\n  const timeoutId = setTimeout(makeInterval, delay, amount, delay, step)\n}\n\nfunction makeInterval(amount, delay, step) {\n  callPromise(amount, delay, step)\n  intervalId = setInterval(callPromise, step, amount, delay, step)\n}\n\nfunction callPromise(amount, delay, step) {\n  const time = delay + step * position;\n    position += 1;\n  if (position > amount) {\n    clearInterval(intervalId)\n    position = 0;\n    return;\n  }\n  \n  createPromise(position, time)\n} \n  \nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    Notify.success(`Fullfilled promise ${position} in ${delay}ms`);\n  } else {\n    Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n  }\n\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delay })\n    }\n    reject({ position, delay })\n  }).then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n}\n\n\n  \n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$delayEl","document","querySelector","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","addEventListener","event","preventDefault","delay","parseInt","value","step","amount","setTimeout","$47d4ff9957288465$var$makeInterval","$47d4ff9957288465$var$makeTimeout","$47d4ff9957288465$var$position","$47d4ff9957288465$var$intervalId","$47d4ff9957288465$var$callPromise","setInterval","time","clearInterval","position1","delay1","shouldResolve","Math","random","Notify","success","failure","Promise","resolve","reject","position","then","position2","console","log","catch","position3","$47d4ff9957288465$var$createPromise"],"version":3,"file":"03-promises.2f82a40a.js.map"}